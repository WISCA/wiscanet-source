#!/bin/bash
USER_ID=wisca
HOME=/home/$USER_ID/wdemo

function valid_ip() {

    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

function cnodeSetup {
    echo Install control node packages to $1 ...
    (ssh $USER_ID@$1 'mkdir -p wdemo');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/cnode');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/cnode/bin');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/cnode/log');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/cnode/log_history');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/usr');
    (ssh $USER_ID@$1 'mkdir -p wdemo/usr');
    (cd $HOME/dev/src/build; tar cfz $HOME/dev/src/cnode.tgz cnode)
    (cd $HOME/dev/src/; scp cnode.tgz $USER_ID@$1:wdemo/run; ssh $USER_ID@$1 'cd wdemo/run; rm -rf cnode/log/*; tar xfz cnode.tgz; date > cnode/install_log; rm -f cnode.tgz')
    (rm -f $HOME/dev/src/cnode.tgz)
}

function makeSysConfig {
    (cd $HOME/dev/src/build/enode/bin; echo "---" > sysconfig.yml);
    (cd $HOME/dev/src/build/enode/bin; echo "server_ip: $1" >> sysconfig.yml);
    (cd $HOME/dev/src/build/enode/bin; echo "server_port: 9000" >> sysconfig.yml);
}

function enodeSysSetup {
    echo Install edge node packages to $1...
    (ssh $USER_ID@$1 'mkdir -p wdemo');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/bin');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/mat');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/mat/lib');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/tools');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/log');
    (ssh $USER_ID@$1 'mkdir -p wdemo/run/enode/conlog');
    (cd $HOME/dev/src/build; tar cfz $HOME/dev/src/enode.tgz enode)
    (cd $HOME/dev/src; scp enode.tgz $USER_ID@$1:wdemo/run; ssh $USER_ID@$1 'cd wdemo/run; rm -rf enode/log/*; rm -rf enode/mat/*; tar xfz enode.tgz; date > enode/install_log; rm -f enode.tgz')
    (rm -f $HOME/dev/src/enode.tgz)
}

function usrSetup {
    echo Install USER MATLAB code to $1...
    (ssh $USER_ID@$1 'mkdir -p wdemo');
    (ssh $USER_ID@$1 'mkdir -p wdemo/usr');
    (ssh $USER_ID@$1 'mkdir -p wdemo/usr/cfg');
    (ssh $USER_ID@$1 'mkdir -p wdemo/usr/tools');
    (ssh $USER_ID@$1 'mkdir -p wdemo/usr/tools/cli');
    (cd $HOME/dev/umat/; tar cfz $HOME/dev/src/usr.tgz mat)
    (cd $HOME/dev/src; scp usr.tgz $USER_ID@$1:wdemo/usr; ssh $USER_ID@$1 'cd wdemo/usr; tar xfz usr.tgz; rm -f usr.tgz')
    (rm -f $HOME/dev/src/usr.tgz)
    (scp $HOME/dev/umat/tools/cli/* $USER_ID@$1:wdemo/usr/tools/cli)
}

function usage {
    echo usage:
    echo "  pInstall -t cnode|enode|usr -c cnode ip-addr] [-e enode ip-addr] [-u unode ip-addr]"
    exit 1;
}

###########################################
#    MAIN routine starts here
###########################################

echo  ""
echo  ""
echo ========== start of setup ==============

while getopts ":t:c:e:u:i:" opt; do
  case $opt in
    t)
      ntype=$OPTARG;
      if ( [ $ntype != "cnode" ] && [ $ntype != "enode" ] && [ $ntype != "usr" ]); then
         echo "wrong node type"; usage;
      fi
      echo "+ node type = " $ntype
      ;;
    c)
      cIPAddr=$OPTARG;
      if ( !( valid_ip $cIPAddr ) ); then
          echo "worng cnode IP address"; usage;
      fi
      echo "+ cnode IP address = " $cIPAddr
      ;;
    e)
      eIPAddr=$OPTARG;
      if ( !( valid_ip $eIPAddr ) ); then
          echo "worng enode IP address"; usage;
      fi
      echo "+ enode IP address = " $eIPAddr
      ;;
    u)
      uIPAddr=$OPTARG;
      if ( !( valid_ip $uIPAddr ) ); then
          echo "wrong unode IP address"; usage;
      fi
      echo "+ unode IP address = " $uIPAddr
      ;;
    i)
      USER_ID=$OPTARG;
      echo "+ USER_ID = " $USER_ID
      ;;


    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if ( [ "$ntype" == "cnode" ] ); then
    cnodeSetup $cIPAddr
elif ( [ "$ntype" == "enode" ] ); then
    makeSysConfig $cIPAddr
    enodeSysSetup $eIPAddr
elif ( [ "$ntype" == "usr" ] ); then
    usrSetup $uIPAddr
fi

echo =========== end of setup ===============
